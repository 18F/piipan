version: 2.1

orbs:
  azure-cli: circleci/azure-cli@1.1.0

jobs:
  test:
    environment:
      MSBUILD_PROPS: "-p:ContinuousIntegrationBuild=true"
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1
    steps:
      - checkout
      - run:
          name: Setup Code Climate reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - run:
          working_directory: dashboard/tests/Piipan.Dashboard.Tests
          name: Test Dashboard
          command: dotnet test $MSBUILD_PROPS --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
      - run:
          working_directory: etl/tests/Piipan.Etl.Tests
          name: Test Etl
          command: dotnet test $MSBUILD_PROPS --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
      - run:
          working_directory: match/tests/Piipan.Match.State.Tests
          name: Test State Match
          command: dotnet test $MSBUILD_PROPS --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
      - run:
          working_directory: query-tool/tests/Piipan.QueryTool.Tests
          name: Test Query Tool
          command: dotnet test $MSBUILD_PROPS --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
      - run:
          working_directory: match/tests/Piipan.Match.Orchestrator.Tests
          name: Test Orchestrator Match
          command: dotnet test $MSBUILD_PROPS --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
      - run:
          working_directory: metrics/tests/Piipan.Metrics.Tests
          name: Test Metrics
          command: dotnet test $MSBUILD_PROPS --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
      - run:
          working_directory: shared/tests/Piipan.Shared.Tests
          name: Test Shared
          command: dotnet test $MSBUILD_PROPS --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
      - run:
          name: Upload Code Climate coverage report
          command: |
            ./cc-test-reporter -d format-coverage ./dashboard/tests/Piipan.Dashboard.Tests/TestResults/**/coverage.info --input-type lcov -p /root/project -o /tmp/codeclimate.dashboard.json
            ./cc-test-reporter -d format-coverage ./etl/tests/Piipan.Etl.Tests/TestResults/**/coverage.info --input-type lcov -p /root/project -o /tmp/codeclimate.etl.json
            ./cc-test-reporter -d format-coverage ./match/tests/Piipan.Match.State.Tests/TestResults/**/coverage.info --input-type lcov -p /root/project -o /tmp/codeclimate.match.state.json
            ./cc-test-reporter -d format-coverage ./query-tool/tests/Piipan.QueryTool.Tests/TestResults/**/coverage.info --input-type lcov -p /root/project -o /tmp/codeclimate.query-tool.json
            ./cc-test-reporter -d format-coverage ./match/tests/Piipan.Match.Orchestrator.Tests/TestResults/**/coverage.info --input-type lcov -p /root/project -o /tmp/codeclimate.match.orchestrator.json
            ./cc-test-reporter -d format-coverage ./metrics/tests/Piipan.Metrics.Tests/TestResults/**/coverage.info --input-type lcov -p /root/project -o /tmp/codeclimate.metrics.json
            ./cc-test-reporter -d format-coverage ./shared/tests/Piipan.Shared.Tests/TestResults/**/coverage.info --input-type lcov -p /root/project -o /tmp/codeclimate.shared.json
            ./cc-test-reporter sum-coverage /tmp/codeclimate.*.json -o /tmp/sum.json
            ./cc-test-reporter upload-coverage -i /tmp/sum.json

  build:
    environment:
      MSBUILD_PROPS: "-p:ContinuousIntegrationBuild=true"
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1
    working_directory: /build
    steps:
      - checkout
      - run:
          name: Install zip
          command: |
            apt-get update -y
            apt-get install -y zip
      - run:
          working_directory: dashboard/src/Piipan.Dashboard
          name: Build Dashboard
          command: dotnet publish $MSBUILD_PROPS -o ./artifacts
      - run:
          working_directory: dashboard/src/Piipan.Dashboard/artifacts
          name: Zip Dashboard build
          command: zip -r dashboard.zip .
      - run:
          name: Move Dashboard zip to persistent directory
          command: |
            mkdir -p workspace
            mv dashboard/src/Piipan.Dashboard/artifacts/dashboard.zip workspace/dashboard.zip
      - run:
          working_directory: query-tool/src/Piipan.QueryTool
          name: Build Query Tool
          command: dotnet publish $MSBUILD_PROPS -o ./artifacts
      - run:
          working_directory: query-tool/src/Piipan.QueryTool/artifacts
          name: Zip Query Tool build
          command: zip -r query-tool.zip .
      - run:
          name: Move Query Tool zip to persistent directory
          command: mv query-tool/src/Piipan.QueryTool/artifacts/query-tool.zip workspace/query-tool.zip
      - persist_to_workspace:
          root: workspace
          paths:
            - dashboard.zip
            - query-tool.zip

  deploy:
    executor: azure-cli/azure-docker
    steps:
      - attach_workspace:
          at: /build/workspace
      - azure-cli/login-with-service-principal
      - run:
          name: Upload Dashboard
          command: az webapp deployment source config-zip -g rg-core-dev -n piipan-dashboard-5or4l3nqzevf4 --src /build/workspace/dashboard.zip
      - run:
          name: Upload Query Tool
          command: az webapp deployment source config-zip -g rg-core-dev -n piipan-query-tool-5or4l3nqzevf4 --src /build/workspace/query-tool.zip

  accessibility:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1
    steps:
      - checkout
      - run:
          name: Install Dependencies
          # Node and all the supporting libs for puppeteer
          # https://medium.com/@ssmak/how-to-fix-puppetteer-error-while-loading-shared-libraries-libx11-xcb-so-1-c1918b75acc3
          command : |
            curl -sL https://deb.nodesource.com/setup_10.x |  bash -
            apt-get install -y nodejs
            apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - run:
          name: Install pa11y
          command: npm install -g pa11y-ci --unsafe-perm=true --allow-root
      - run:
          name: Run dev version of dashboard for pa11y testing
          working_directory: dashboard/src/Piipan.Dashboard
          command: dotnet run
          background: true
      - run:
          name: wait for dashboard app to spin up
          command: sleep 15s
      - run:
          name: run pa11y
          working_directory: dashboard/src/Piipan.Dashboard
          # This command references a .pa11yci config file in subsystem root
          command: pa11y-ci


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - build
      - accessibility
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only: main
