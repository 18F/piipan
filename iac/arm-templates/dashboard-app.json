{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string"
        },
        "frontDoorId": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "resourceTags": {
            "type": "object"
        },
        "servicePlan": {
            "type": "string"
        },
        "metricsApiUri": {
            "type": "string"
        },
        "eventHubName": {
            "type": "String"
        },
        "aadIssuerUri": {
            "type": "string"
        },
        "aadClientId": {
            "type": "string"
        }
    },
    "variables": {
        "appName": "[concat(parameters('appName'))]",
        "sku": "S1",
        "baseSiteConfig": {
            "linuxFxVersion": "DOTNETCORE|3.1",
            "ipSecurityRestrictions": [
                /* Restricts access to Front Door resource only */
                /* https://docs.microsoft.com/en-us/azure/app-service/app-service-ip-restrictions#manage-access-restriction-rules-programmatically */
                {
                    "ipAddress": "AzureFrontDoor.Backend",
                    "tag": "ServiceTag",
                    "action": "Allow",
                    "priority": 100,
                    "name": "Allow Azure Front Door access",
                    "headers": {
                        "x-azure-fdid": [
                            "[concat(parameters('frontDoorId'))]"
                        ]
                    }
                }
            ],
            "ftpsState": "Disabled",
            "appSettings": [
                // Environment Variables
                {
                    "name": "MetricsApiUri",
                    "value": "[parameters('metricsApiUri')]"
                }
            ]
        },
        "systemTypeTag": {
            "SysType": "DashboardApp"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[parameters('servicePlan')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "sku": {
                "name": "[variables('sku')]"
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('appName')]",
            "location": "[parameters('location')]",
            "tags": "[union(parameters('resourceTags'), variables('systemTypeTag'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('servicePlan'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('servicePlan'))]",
                "siteConfig": "[variables('baseSiteConfig')]",
                "resources": [
                    {
                        "apiVersion": "2020-06-01",
                        "name": "web",
                        "location": "[parameters('location')]",
                        "dependsOn": [
                            "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
                        ]
                    }
                ]
            }
        },
        {
            /* https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings */
            "apiVersion": "2017-05-01-preview",
            "type": "Microsoft.Web/sites/providers/diagnosticSettings",
            "name": "[concat(variables('appName'), '/Microsoft.Insights/stream-logs-to-event-hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appName'))]"
            ],
            "properties": {
                "eventHubAuthorizationRuleId": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.EventHub/namespaces/', parameters('eventHubName'), '/authorizationrules/RootManageSharedAccessKey')]",
                "eventHubName": "logs",
                "logs": [
                    {
                        "category": "AppServiceAntivirusScanAuditLogs",
                        "enabled": true
                    },
                    {
                        "category": "AppServiceHTTPLogs",
                        "enabled": true
                    },
                    {
                        "category": "AppServiceConsoleLogs",
                        "enabled": true
                    },
                    {
                        "category": "AppServiceAppLogs",
                        "enabled": true
                    },
                    {
                        "category": "AppServiceFileAuditLogs",
                        "enabled": true
                    },
                    {
                        "category": "AppServiceAuditLogs",
                        "enabled": true
                    },
                    {
                        "category": "AppServiceIPSecAuditLogs",
                        "enabled": true
                    },
                    {
                        "category": "AppServicePlatformLogs",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('appName'), '/authsettingsV2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appName'))]"
            ],
            "properties": {
                "platform": {
                    "enabled": true
                },
                "globalValidation": {
                    "requireAuthentication": true,
                    "unauthenticatedClientAction": "RedirectToLoginPage"
                },
                "identityProviders": {
                    "azureActiveDirectory": {
                        "enabled": true,
                        "registration": {
                            "openIdIssuer": "[parameters('aadIssuerUri')]",
                            "clientId": "[parameters('aadClientId')]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "appName": {
            "type": "string",
            "value": "[variables('appName')]"
        }
    }
}
